#+TITLE: Bump in the Dual Task
#+STARTUP: fold
#+PROPERTY: header-args:ipython :results both :exports both :async yes :session dual_data :kernel dual_data

* Notebook Settings
#+begin_src ipython
  %load_ext autoreload
  %autoreload 2
  %reload_ext autoreload

  %run /home/leon/models/lif_cpp/notebooks/setup.py
  %matplotlib inline
  %config InlineBackend.figure_format = 'png'
#+end_src

#+RESULTS:
: The autoreload extension is already loaded. To reload it, use:
:   %reload_ext autoreload
: Python exe
: /home/leon/mambaforge/envs/dual_data/bin/python

* Imports
#+begin_src ipython
  import sys
  sys.path.insert(0, '../')

  import numpy as np
  import matplotlib.pyplot as plt

  from dual_data.common.fig_grid import create_grid
  from dual_data.overlap.get_cos import run_get_cos, plot_bump
  from dual_data.attractor.energy import run_energy, plot_energy 
  from dual_data.stats.bootstrap import my_boots_ci
  from dual_data.decode.bump import decode_bump, circcvl  

#+end_src

#+RESULTS:

* Bump
** Parameters
#+begin_src ipython
  tasks = ['DPA', 'DualGo', 'DualNoGo']
  days = ['first', 'last']

  kwargs = dict()
  kwargs = {'prescreen': 'fpr', 'pval':0.05, 'trials':'', 'balance': True,
            'method': 'bootstrap', 'bolasso_pval':0.05,
            'bootstrap':False, 'n_boots':1000,
            'preprocess':True, 'scaler_BL':'robust', 'avg_noise':True, 'unit_var_BL':False,
            'clf':'log_loss', 'scaler': None, 'tol':0.001, 'penalty':'l1',
            'out_fold': 'stratified', 'random_state': None,
            'in_fold': 'stratified', 'n_in': 5,
            'n_repeats': 10,
            }

  time = np.linspace(0, 14, int(6 * 14))

#+end_src

#+RESULTS:

** Single mouse

#+begin_src ipython
  mouse = 'ACCM03'
  task= 'DPA'
  kwargs['reload']= False
  day = 'first'
  X_df, y_df, X_first, y_first, theta_first = run_get_cos(mouse=mouse, day=day, task=task, **kwargs)
  
  day = 'last'
  kwargs['reload']= False 
  X_dl, y_dl, X_last, y_last, theta_last = run_get_cos(mouse=mouse, day=day, task=task, **kwargs)
#+end_src

#+RESULTS:
#+begin_example
  loading files from /home/leon/dual_task/dual_data/data/ACCM03
  X_days (960, 361, 84) y_days (960, 6)
  ##########################################
  PREPROCESSING: SCALER robust AVG MEAN 0 AVG NOISE True UNIT VAR False
  ##########################################
  in_fold stratified
  ##########################################
  MODEL: SCALER None IMBALANCE False PRESCREEN fpr PCA False METHOD bootstrap FOLDS stratified CLF log_loss
  ##########################################
  DATA: FEATURES distractor TASK Dual TRIALS  DAYS first LASER 0
  ##########################################
  multiple days 0 3 0
  X_S1 (160, 361, 84) X_S2 (160, 361, 84)
  n_max 160
  ##########################################
  DATA: FEATURES sample TASK Dual TRIALS  DAYS first LASER 0
  ##########################################
  multiple days 0 3 0
  X_S1 (160, 361, 84) X_S2 (160, 361, 84)
  n_max 160
  non zeros (361,)
  ##########################################
  DATA: FEATURES sample TASK DPA TRIALS  DAYS first LASER 0
  ##########################################
  multiple days 0 3 0
  X_S1 (80, 361, 84) X_S2 (80, 361, 84)
  n_max 80
  ##########################################
  DATA: FEATURES sample TASK DPA TRIALS  DAYS 1 LASER 0
  ##########################################
  single day
  X_S1 (26, 361, 84) X_S2 (26, 361, 84)
  n_max 26
  ##########################################
  DATA: FEATURES sample TASK DPA TRIALS  DAYS 2 LASER 0
  ##########################################
  single day
  X_S1 (28, 361, 84) X_S2 (26, 361, 84)
  n_max 26
  ##########################################
  DATA: FEATURES sample TASK DPA TRIALS  DAYS 3 LASER 0
  ##########################################
  single day
  X_S1 (26, 361, 84) X_S2 (28, 361, 84)
  n_max 26
  ##########################################
  DATA: FEATURES sample TASK DPA TRIALS  DAYS 4 LASER 0
  ##########################################
  single day
  X_S1 (28, 361, 84) X_S2 (27, 361, 84)
  n_max 27
  ##########################################
  DATA: FEATURES sample TASK DPA TRIALS  DAYS 5 LASER 0
  ##########################################
  single day
  X_S1 (25, 361, 84) X_S2 (26, 361, 84)
  n_max 25
  ##########################################
  DATA: FEATURES sample TASK DPA TRIALS  DAYS 6 LASER 0
  ##########################################
  single day
  X_S1 (27, 361, 84) X_S2 (27, 361, 84)
  n_max 27
  Done
  loading files from /home/leon/dual_task/dual_data/data/ACCM03
  X_days (960, 361, 84) y_days (960, 6)
  ##########################################
  PREPROCESSING: SCALER robust AVG MEAN 0 AVG NOISE True UNIT VAR False
  ##########################################
  in_fold stratified
  ##########################################
  MODEL: SCALER None IMBALANCE False PRESCREEN fpr PCA False METHOD bootstrap FOLDS stratified CLF log_loss
  ##########################################
  DATA: FEATURES distractor TASK Dual TRIALS  DAYS last LASER 0
  ##########################################
  multiple days 0 3 0
  X_S1 (160, 361, 84) X_S2 (160, 361, 84)
  n_max 160
  ##########################################
  DATA: FEATURES sample TASK Dual TRIALS  DAYS last LASER 0
  ##########################################
  multiple days 0 3 0
  X_S1 (160, 361, 84) X_S2 (160, 361, 84)
  n_max 160
  non zeros (361,)
  ##########################################
  DATA: FEATURES sample TASK DPA TRIALS  DAYS last LASER 0
  ##########################################
  multiple days 0 3 0
  X_S1 (80, 361, 84) X_S2 (80, 361, 84)
  n_max 80
  ##########################################
  DATA: FEATURES sample TASK DPA TRIALS  DAYS 1 LASER 0
  ##########################################
  single day
  X_S1 (26, 361, 84) X_S2 (26, 361, 84)
  n_max 26
  ##########################################
  DATA: FEATURES sample TASK DPA TRIALS  DAYS 2 LASER 0
  ##########################################
  single day
  X_S1 (28, 361, 84) X_S2 (26, 361, 84)
  n_max 26
  ##########################################
  DATA: FEATURES sample TASK DPA TRIALS  DAYS 3 LASER 0
  ##########################################
  single day
  X_S1 (26, 361, 84) X_S2 (28, 361, 84)
  n_max 26
  ##########################################
  DATA: FEATURES sample TASK DPA TRIALS  DAYS 4 LASER 0
  ##########################################
  single day
  X_S1 (28, 361, 84) X_S2 (27, 361, 84)
  n_max 27
  ##########################################
  DATA: FEATURES sample TASK DPA TRIALS  DAYS 5 LASER 0
  ##########################################
  single day
  X_S1 (25, 361, 84) X_S2 (26, 361, 84)
  n_max 25
  ##########################################
  DATA: FEATURES sample TASK DPA TRIALS  DAYS 6 LASER 0
  ##########################################
  single day
  X_S1 (27, 361, 84) X_S2 (27, 361, 84)
  n_max 27
  Done
#+end_example

*** Plot Bumps

#+begin_src ipython
  plot_bump(X_first, y_first, 'all', int(X_first.shape[1] * .1))
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/c03e952dc0872c3780207dafd52a4409830183f7.png]]

#+begin_src ipython
  plot_bump(X_last, y_last, 'all', int(X_first.shape[1] * .1))
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/45da2eda9be75922536959bc7c69019f34200507.png]]

*** Save Data
#+begin_src ipython
  import pickle as pkl
  filename = "../data/" + mouse + "/X_bump_first.pkl"
  pkl.dump(X_first, open(filename + ".pkl", "wb"))

  filename = "../data/" + mouse + "/y_bump_first.pkl"
  pkl.dump(y_first, open(filename + ".pkl", "wb"))

  filename = "../data/" + mouse + "/X_bump_last.pkl"
  pkl.dump(X_last, open(filename + ".pkl", "wb"))

  filename = "../data/" + mouse + "/y_bump_last.pkl"
  pkl.dump(y_last, open(filename + ".pkl", "wb")) 
#+end_src

#+RESULTS:

* Energy Landscape
** Parameters
#+begin_src ipython
  init = 0
  last = 53

  print('epoch', time[init], time[last])

  print('max num_bins', (last - init - 1))

  max_num_bins = last - init - 1
  n_bins = 52
  num_bins = np.min((n_bins, max_num_bins))

  num_bins = 26
  print('num_bins', num_bins)

  window = int(0.1 * num_bins)
  print('window', window)
  IF_HMM = 1
#+end_src

#+RESULTS:
: epoch 0.0 8.939759036144578
: max num_bins 52
: num_bins 26
: window 2

** Compute Energy
#+begin_src ipython
  X = X_first[..., init:last]
  # X = X - circmean(X, axis=0)[np.newaxis]
  ci_first = None
  energy_first, phase_first = run_energy(X, num_bins, window, VERBOSE=0, IF_HMM=IF_HMM, n_iter=1000)
  # _, ci_first = my_boots_ci(X, lambda x: run_energy(x, num_bins, window, IF_PHASE=0, IF_HMM=IF_HMM), n_samples=1000)
  print(energy_first.shape)
#+end_src

#+RESULTS:
: 97e1c589-f50d-4825-8b97-6f87713d32e7

#+begin_src ipython
  X = X_last[..., init:last]
  # X = X - circmean(X, axis=0)[np.newaxis]
  ci_last = None
  energy_last, phase_last = run_energy(X, num_bins, window, VERBOSE=0, IF_HMM=IF_HMM, n_iter=1000)
  # _, ci_last = my_boots_ci(X,lambda x: run_energy(x, num_bins, window, IF_PHASE=0, IF_HMM=IF_HMM), n_samples=1000)
  print(energy_last.shape)
#+end_src

#+RESULTS:
: 0e6835c6-1bfd-44cc-acab-b01c724ba28c

** Plot Landscape
#+begin_src ipython
  fig, ax = plt.subplots()
  SMOOTH = True
  window =.2

  plot_energy(phase_first, energy_first,  ci=ci_first, ax=ax, window=window, SMOOTH=SMOOTH)
  plot_energy(phase_last, energy_last, ci=ci_last, ax=ax, window=window, SMOOTH=SMOOTH)
  # plt.ylim([0, .2])
  plt.show()
#+end_src

#+RESULTS:
[[file:./.ob-jupyter/cf4ae25d6039a6b010032336ff413a7102d7d56d.png]]

#+begin_src ipython
  
#+end_src

#+RESULTS:
